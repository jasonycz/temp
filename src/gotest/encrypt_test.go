package pkg

import (
	"testing"
)

func Test_rsaSign(t *testing.T) {
	type args struct {
		origData []byte
	}
	tests := []struct {
		name    string
		args    args
		want    []byte
		wantErr bool
	}{
		{
			"good",
			args{
				origData: []byte{8, 251, 46, 151, 220, 226, 63, 179, 204, 111, 170, 117, 188, 52, 160, 138, 206, 127, 193, 229, 187, 15, 219, 160, 170, 13, 167, 125, 68, 10, 84, 78},
			},
			[]byte{0, 205, 121, 121, 249, 95, 69, 179, 206, 49, 142, 169, 96, 135, 159, 220, 231, 151, 224, 66, 139, 57, 152, 57, 155, 246, 218, 62, 159, 160, 58, 202, 19, 244, 98, 37, 125, 122, 77, 204, 11, 35, 222, 157, 65, 187, 233, 137},
			true,
		},
		{
			"bad",
			args{
				origData: []byte{8, 251, 46, 151, 220, 226, 63, 179, 204, 111, 170, 117, 188, 52, 160, 138, 206, 127, 193, 229, 187, 15, 219, 160, 170, 13, 167, 125, 68, 10, 84, 78},
			},
			[]byte{205, 121, 121, 249, 95, 69, 179, 206, 49, 142, 169, 96, 135, 159, 220, 231, 151, 224, 66, 139, 57, 152, 57, 155, 246, 218, 62, 159, 160, 58, 202, 19, 244, 98, 37, 125, 122, 77, 204, 11, 35, 222, 157, 65, 187, 233, 137},
			false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := rsaSign(tt.args.origData)
			if err != nil {
				t.Error("error1")
			}
			if got == nil {
				t.Error("error2")
			}
			t.Log("succ")
		})
	}
}
